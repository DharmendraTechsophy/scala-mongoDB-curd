[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 11.0.10)
[debug]       Load.loadUnit: plugins took 698.0287ms
[debug]       Load.loadUnit: defsScala took 0.8644ms
[debug] [Loading] Scanning directory C:\Users\Dharmen\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Dharmen\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 97.951 ms
[debug]           Load.resolveProject(global-plugins) took 234.3512ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Dharmen\.sbt\1.0\plugins, plugins: List(<none>))) took 607.5651ms
[debug] [Loading] Done in C:\Users\Dharmen\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 839.9562ms
[debug]       Load.loadUnit: cleanEvalClasses took 3.8012ms
[debug]     Load.loadUnit(file:/C:/Users/Dharmen/.sbt/1.0/plugins/, ...) took 1606.948ms
[debug]   Load.apply: load took 2658.748ms
[debug]   Load.apply: resolveProjects took 23.5891ms
[debug]   Load.apply: finalTransforms took 450.3992ms
[debug]   Load.apply: config.delegates took 24.2393ms
[debug]   Load.apply: Def.make(settings)... took 4753.703ms
[debug]   Load.apply: structureIndex took 1389.0136ms
[debug]   Load.apply: mkStreams took 6.1894ms
[info] loading global plugins from C:\Users\Dharmen\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 19697.8289ms
[debug]           Load.loadUnit: plugins took 105.0091ms
[debug]           Load.loadUnit: defsScala took 0.0102ms
[debug] [Loading] Scanning directory C:\scala\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.365 ms
[debug]               Load.resolveProject(scala-build) took 2.7921ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-build, base: C:\scala\project, plugins: List(<none>))) took 31.1294ms
[debug] [Loading] Done in C:\scala\project, returning: (scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 37.3132ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0246ms
[debug]         Load.loadUnit(file:/C:/scala/project/, ...) took 146.2869ms
[debug]       Load.apply: load took 150.883ms
[debug]       Load.apply: resolveProjects took 0.2009ms
[debug]       Load.apply: finalTransforms took 30.9023ms
[debug]       Load.apply: config.delegates took 0.9383ms
[debug]       Load.apply: Def.make(settings)... took 833.8269ms
[debug]       Load.apply: structureIndex took 103.9552ms
[debug]       Load.apply: mkStreams took 0.0033ms
[info] loading project definition from C:\scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2665.4087ms
[debug]     Load.loadUnit: defsScala took 0.0066ms
[debug] [Loading] Scanning directory C:\scala
[debug]       Load.loadUnit: mkEval took 14.6003ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\scala, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.6581 ms
[info] loading settings for project scala from build.sbt ...
[debug]         Load.resolveProject(scala) took 5.7214ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala, base: C:\scala, plugins: List(<none>))) took 16.1669ms
[debug] [Loading] Done in C:\scala, returning: (scala)
[debug]     Load.loadUnit: loadedProjectsRaw took 417.5837ms
[debug]     Load.loadUnit: cleanEvalClasses took 195.5593ms
[debug]   Load.loadUnit(file:/C:/scala/, ...) took 3288.5509ms
[debug] Load.apply: load took 3298.3916ms
[debug] Load.apply: resolveProjects took 0.1804ms
[debug] Load.apply: finalTransforms took 32.1304ms
[debug] Load.apply: config.delegates took 1.1535ms
[debug] Load.apply: Def.make(settings)... took 554.1292ms
[debug] Load.apply: structureIndex took 609.2462ms
[debug] Load.apply: mkStreams took 0.0036ms
[info] set current project to scala (in build file:/C:/scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-6d0842cbc714054df2ad
[info] started sbt server
